{
    "openapi": "3.0.0",
    "info": {
        "title": "APIhidalgo.devs",
        "description": "Api escuela hidalgo",
        "termsOfService": "https://example.com/terms",
        "contact": {
            "name": "Equipo de soporte",
            "email": "msolegario.cisneros@gmail.com"
        },
        "license": {
            "name": "Licencia",
            "url": "https://example.com/license"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://por_definir/api/documentation"
        }
    ],
    "paths": {
        "/api/comments": {
            "post": {
                "tags": [
                    "comments"
                ],
                "summary": "Create a new comment",
                "description": "Create a new comment for a specific activity by a user.",
                "operationId": "createComment",
                "requestBody": {
                    "description": "Comment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activity_id",
                                    "user_id",
                                    "comment"
                                ],
                                "properties": {
                                    "activity_id": {
                                        "description": "ID of the activity",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "description": "ID of the user",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "comment": {
                                        "description": "The comment text",
                                        "type": "string",
                                        "example": "This is a comment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "description": "ID of the comment",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "activity_id": {
                                                    "description": "ID of the activity",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "description": "ID of the user",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "comment": {
                                                    "description": "The comment text",
                                                    "type": "string",
                                                    "example": "This is a comment"
                                                },
                                                "created_at": {
                                                    "description": "Creation timestamp",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-07T12:34:56Z"
                                                },
                                                "updated_at": {
                                                    "description": "Last update timestamp",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-07T12:34:56Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "activity_id is required"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comments/activity/{id}": {
            "get": {
                "tags": [
                    "comments"
                ],
                "summary": "Get all comments for a specific activity",
                "operationId": "ef39b0987a16a59177c5b03d2158dd21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "example": "Great activity!"
                                                    },
                                                    "user_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "rol": {
                                                        "type": "string",
                                                        "example": "student"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-08T14:12:33Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comments not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "comments not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/activities": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Recuperar todas las actividades",
                "description": "Devuelve una lista de todas las actividades",
                "operationId": "18ddabf4129e6b31394d1083a69929cc",
                "responses": {
                    "200": {
                        "description": "Una lista con actividades",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Actividades recuperadas exitosamente"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ver video"
                                                    },
                                                    "course_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "video_url": {
                                                        "type": "string",
                                                        "example": "https://www.youtube.com/watch?v=12343124"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Ver video"
                                                    },
                                                    "activity_type": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "activities not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "activities not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "activities"
                ],
                "summary": "Crear una nueva actividad",
                "operationId": "6532ef9dfd88219f7a74a53e7bf61a40",
                "requestBody": {
                    "description": "Detalles de la actividad",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id",
                                    "name",
                                    "description",
                                    "type_id"
                                ],
                                "properties": {
                                    "course_id": {
                                        "description": "ID del curso",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "Nombre de la actividad",
                                        "type": "string",
                                        "example": "Ver video"
                                    },
                                    "video_url": {
                                        "description": "URL del video",
                                        "type": "string",
                                        "example": "https://www.youtube.com/watch?v=12343124"
                                    },
                                    "description": {
                                        "description": "Descripción de la actividad",
                                        "type": "string",
                                        "example": "Ver video"
                                    },
                                    "type_id": {
                                        "description": "ID del tipo de actividad",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "activity created successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Ver video"
                                                },
                                                "video_url": {
                                                    "type": "string",
                                                    "example": "https://www.youtube.com/watch?v=12343124"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Ver video"
                                                },
                                                "type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error de validación",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": "bad request"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Curso no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "course not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creando la actividad",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/activities/{id}": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Get activity by ID",
                "operationId": "063fb40e65368627316e106fd2c4901e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the activity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Ver video"
                                            },
                                            "course_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "video_url": {
                                                "type": "string",
                                                "example": "https://www.youtube.com/watch?v=12343124"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Ver video"
                                            },
                                            "activity_type": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-06-01T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-06-01T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "activities"
                ],
                "summary": "Update activity by ID",
                "operationId": "5e1f1d753918eb5c459448253d05aa7a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the activity to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Activity data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "primera clase"
                                    },
                                    "video_url": {
                                        "type": "string",
                                        "example": "www.youtube.com&12343124"
                                    },
                                    "text": {
                                        "type": "string",
                                        "example": "Detalles de la actividad"
                                    },
                                    "calification": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "primera clase"
                                                },
                                                "video_url": {
                                                    "type": "string",
                                                    "example": "www.youtube.com&12343124"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "example": "Detalles de la actividad"
                                                },
                                                "calification": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Activity not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating activity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activities/course/{id}": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Retrieve activietes by course ID",
                "description": "Returns a list of activities taught by a specific course",
                "operationId": "581b6fa2fccda5e7b042ee6a98ff277e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ver video"
                                                    },
                                                    "course_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "video_url": {
                                                        "type": "string",
                                                        "example": "https://www.youtube.com/watch?v=12343124"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Ver video"
                                                    },
                                                    "activity_type": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "course not found or no courses found for the teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activities/{id}": {
            "delete": {
                "tags": [
                    "activities"
                ],
                "summary": "Delete an activity by ID",
                "description": "Delete an activity by its ID",
                "operationId": "f99a65b205f640e7f32a6415f62d75ff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Activity deleted successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Activity not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files_activity": {
            "post": {
                "tags": [
                    "FilesActivities"
                ],
                "summary": "Add a file or URL to an activity.",
                "operationId": "251c71208ee6e6fd707da15a6c70204a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activity_id",
                                    "description"
                                ],
                                "properties": {
                                    "activity_id": {
                                        "description": "ID of the activity to which the file or URL will be added.",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "url": {
                                        "description": "URL of the file to add. This field is optional and can be null.",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/file.pdf",
                                        "nullable": true
                                    },
                                    "file": {
                                        "description": "File to add. This field is optional and can be null. Only provide this if no URL is provided.",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "description": {
                                        "description": "Description of the file to add.",
                                        "type": "string",
                                        "example": "Description of the file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The file or URL has been added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "activity_id": {
                                                    "description": "ID of the activity to which the file or URL will be added.",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "url": {
                                                    "description": "URL of the file to add. This field is optional and can be null.",
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://example.com/file.pdf",
                                                    "nullable": true
                                                },
                                                "description": {
                                                    "description": "Description of the file to add.",
                                                    "type": "string",
                                                    "example": "Description of the file"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to failed validation or business logic error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "description": "Validation or business logic errors.",
                                            "type": "object"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while processing the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "error": {
                                            "description": "Description of the internal error.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files_activity/activity/{id}": {
            "get": {
                "tags": [
                    "FilesActivities"
                ],
                "summary": "Get all files for a specific activity.",
                "operationId": "25ee6bca510c043c8365083a87ca7646",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the activity to get the files for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of files for the specified activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "File ID.",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "activity_id": {
                                                        "description": "Activity ID.",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "file_url": {
                                                        "description": "URL of the file.",
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "https://example.com/file.pdf"
                                                    },
                                                    "description": {
                                                        "description": "Description of the file.",
                                                        "type": "string",
                                                        "example": "Description of the file"
                                                    },
                                                    "type_file": {
                                                        "description": "file type",
                                                        "type": "string",
                                                        "example": "pdf"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found or no files associated with the activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Error details.",
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while processing the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Description of the internal error.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "'files_activity/{activityId}/by/{studentId}": {
            "get": {
                "tags": [
                    "FilesActivities"
                ],
                "summary": "Get all files related to a specific activity for a student.",
                "operationId": "ce77056f508d3aaf4d243b0528cd5f0d",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns the files related to the activity for the student.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the file.",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "activity_id": {
                                                        "description": "Activity ID.",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "file_url": {
                                                        "description": "URL of the file.",
                                                        "type": "string",
                                                        "example": "https://example.com/file.pdf"
                                                    },
                                                    "description": {
                                                        "description": "Description of the file.",
                                                        "type": "string",
                                                        "example": "Description of the file"
                                                    },
                                                    "type_file": {
                                                        "description": "file type",
                                                        "type": "string",
                                                        "example": "pdf"
                                                    },
                                                    "was cheked": {
                                                        "description": "was cheeknd by student",
                                                        "type": "boolean",
                                                        "example": "true"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to failed validation or business logic error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "description": "Validation or business logic error.",
                                            "type": "string",
                                            "example": "student or file activity not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No files found for the activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Error description.",
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files_activity/{id}": {
            "get": {
                "tags": [
                    "FilesActivities"
                ],
                "summary": "Get a file by his id",
                "operationId": "f22cfedc06ab336e7c257de0ad4c4216",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the activity to get the files for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of files for the specified activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "File ID.",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "activity_id": {
                                                        "description": "Activity ID.",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "file_url": {
                                                        "description": "URL of the file.",
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "https://example.com/file.pdf"
                                                    },
                                                    "description": {
                                                        "description": "Description of the file.",
                                                        "type": "string",
                                                        "example": "Description of the file"
                                                    },
                                                    "type_file": {
                                                        "description": "file type",
                                                        "type": "string",
                                                        "example": "pdf"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found or no files associated with the activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Error details.",
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while processing the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Description of the internal error.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FilesActivities"
                ],
                "summary": "Change the file or URL for a specific activity.",
                "operationId": "4d6f31f00c2af03ccc1400b19fdad1ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file activity to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "New file to upload. This field is optional and can be null if a URL is provided.",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "url": {
                                        "description": "New URL to link. This field is optional and can be null if a file is provided.",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/file.pdf",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The file or URL has been updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "description": "New URL of the file.",
                                            "type": "string",
                                            "format": "url",
                                            "example": "https://example.com/newfile.pdf"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to validation or business logic error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "description": "Validation or business logic errors.",
                                            "type": "object"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File activity not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Error details.",
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while processing the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Description of the internal error.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FilesActivities"
                ],
                "summary": "Delete a file associated with an activity by its ID.",
                "operationId": "323c1cbd85565e403755f43727cca40a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file activity to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The file activity has been deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "activityFile was deleted successfully"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File activity not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Error details.",
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while trying to delete the file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "description": "Error details.",
                                            "type": "string",
                                            "example": "error trying delete file"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/advices": {
            "get": {
                "tags": [
                    "advices"
                ],
                "summary": "Get all advices",
                "description": "Retrieve a list of all advices.",
                "operationId": "getAllAdvices",
                "responses": {
                    "200": {
                        "description": "Successful response with a list of advices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "text": {
                                                        "type": "string",
                                                        "example": "This is an advice text."
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "http://example.com/images/advice1.jpg"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-08T05:21:34.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-08T05:21:34.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Advices not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "advices not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "advices"
                ],
                "summary": "Create a new advice",
                "description": "Create a new advice with optional image upload.",
                "operationId": "createAdvice",
                "requestBody": {
                    "description": "Advice data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "This is an advice text."
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Advice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "text": {
                                                    "type": "string",
                                                    "example": "bienvenidos"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://clodinary?v?123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating advice"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/advices/{id}": {
            "delete": {
                "tags": [
                    "advices"
                ],
                "summary": "Delete an advice by ID",
                "description": "Delete a specific advice by its ID.",
                "operationId": "deleteAdviceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the advice to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Advice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "advice not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/advices/{Id}": {
            "post": {
                "tags": [
                    "advices"
                ],
                "summary": "Update an advice by ID",
                "description": "Update a specific advice by its ID.",
                "operationId": "updateAdviceById",
                "parameters": [
                    {
                        "name": "adviceId",
                        "in": "path",
                        "description": "ID of the advice to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Advice data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "Updated advice text"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Advice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "text": {
                                                    "type": "string",
                                                    "example": "bienvenidos"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://cloudinary?v=123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Advice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "advice not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/advices/{adviceId}/change_image": {
            "post": {
                "tags": [
                    "advices"
                ],
                "summary": "Change the image of an advice by ID",
                "description": "Update the image of a specific advice by its ID.",
                "operationId": "changeImageFromAdviceById",
                "parameters": [
                    {
                        "name": "adviceId",
                        "in": "path",
                        "description": "ID of the advice to update the image",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New image for the advice",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://cloudinary?v=123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Advice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "advice not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "operationId": "9fd6e9ebd3b5c756494ea7532b2e6fc2",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "rol_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "image_url": {
                                                "type": "string",
                                                "example": "https://cloudinary?v237&"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "data not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Register a new user",
                "operationId": "362756c3a1cf307e5eaf118d41499a9d",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "rol_id",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "rol_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "rol_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "password": {
                                            "type": "string",
                                            "example": "password123"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "example": "https://cloudfare?media01"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating user"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": [
                                                "error message"
                                            ]
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Login a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "admin"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "email": "example@example.com"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "incorrect credentials"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/retrieve_password": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh user's password",
                "operationId": "478facf448c18e042fba99328d560e83",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New password sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "new_password": {
                                            "type": "string",
                                            "example": "newPassword123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "user not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error sending email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Logout user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "User not logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not logged in"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "user not logged"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 304
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "invalid token"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/califications": {
            "post": {
                "tags": [
                    "califications"
                ],
                "summary": "Add a new calification",
                "description": "Create a new calification for a student in a specific activity.",
                "operationId": "addCalification",
                "requestBody": {
                    "description": "Calification data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activity_id",
                                    "student_id",
                                    "calification"
                                ],
                                "properties": {
                                    "activity_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "student_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "calification": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Calification created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "activity_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "student_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "calification": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/califications/{student_id}/activity/{activity_id}": {
            "get": {
                "tags": [
                    "califications"
                ],
                "summary": "Get all grades for an activity for a student",
                "operationId": "19a8f3b2c9d046c807069013e96e44dd",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "description": "ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity_id",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "info activity": {
                                                    "properties": {
                                                        "course": {
                                                            "type": "string",
                                                            "example": "big data"
                                                        },
                                                        "activity": {
                                                            "type": "string",
                                                            "example": "read text"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "califications": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "calification 1": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 8
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "student not valid"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity has no grades",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "activity has not calification"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/califications/{student_id}/course/{course_id}": {
            "get": {
                "tags": [
                    "califications"
                ],
                "summary": "Get all grades for a course for a student",
                "operationId": "c8b4c8c45ea20fc1b16605b88bdcac48",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "description": "ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "info activity": {
                                                    "properties": {
                                                        "course": {
                                                            "type": "string",
                                                            "example": "big data"
                                                        },
                                                        "teacher": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "califications": {
                                                    "properties": {
                                                        "Activity 1": {
                                                            "type": "object",
                                                            "example": [
                                                                8.5,
                                                                10,
                                                                0
                                                            ]
                                                        },
                                                        "Activity 2": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 10
                                                            }
                                                        },
                                                        "Activity 3": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 5.4
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "student not valid"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No grades found for the student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "student has not calificators"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/califications/{id}": {
            "get": {
                "tags": [
                    "califications"
                ],
                "summary": "Get a calification by ID",
                "operationId": "95d3a751c95f02395e91ac8aea1ea7c3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the calification",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "activity_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "student_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "calification": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 9.5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Calification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "calification not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "califications"
                ],
                "summary": "Update the value of a grade by ID",
                "operationId": "30d11fcee4acf9bcf68d8a6adaf97a05",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the calification",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New calification value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 9.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Calification updated successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 9.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Calification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Calification not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "califications"
                ],
                "summary": "Delete an calification by ID",
                "operationId": "4e0b3e852433fad5171e8edde8d6f2aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the calification",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "calification deleted successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "calification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "calification not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/certifications": {
            "post": {
                "tags": [
                    "certifications"
                ],
                "summary": "Create a new certification",
                "description": "Create a new certification record",
                "operationId": "976fbc07a9bf5dc3e83f29edbbf2c6f4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "student_id"
                                ],
                                "properties": {
                                    "student_id": {
                                        "description": "ID of the student",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "numeric_calification": {
                                        "description": "Numeric calification of the student",
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.5
                                    },
                                    "string_calification": {
                                        "description": "String calification of the student",
                                        "type": "string",
                                        "example": "B+"
                                    },
                                    "observations": {
                                        "description": "Additional observations",
                                        "type": "string",
                                        "example": "Good performance"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Certification successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "student_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "numeric_calification": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8.5
                                                },
                                                "string_calification": {
                                                    "type": "string",
                                                    "example": "B+"
                                                },
                                                "observations": {
                                                    "type": "string",
                                                    "example": "Good performance"
                                                },
                                                "certification": {
                                                    "type": "string",
                                                    "example": "72101108108111328711111410810049"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "courses"
                ],
                "summary": "Retrieve all courses",
                "description": "Returns a list of all courses",
                "operationId": "59f700a7ea74f9535b139b44357f0f69",
                "responses": {
                    "200": {
                        "description": "A list with courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Courses retrieved successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name_course": {
                                                        "type": "string",
                                                        "example": "big data"
                                                    },
                                                    "teacher_id": {
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "curso big data"
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "hhttps://cludibary?v354343"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No courses found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Courses not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "courses"
                ],
                "summary": "Create a new course",
                "operationId": "a47d30e17f303c7a5cb042a5dbcd6ddb",
                "requestBody": {
                    "description": "Course details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_course",
                                    "teacher_id",
                                    "description"
                                ],
                                "properties": {
                                    "name_course": {
                                        "type": "string",
                                        "example": "Course Name"
                                    },
                                    "teacher_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Course Description"
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-07-30T08:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-30T09:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name_course": [
                                                    "The name_course field is required"
                                                ]
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Teacher not found or not a teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "teacher not found or not a teacher"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating course"
                                        },
                                        "errors": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "courses"
                ],
                "summary": "Delete course by id",
                "description": "Delete a course by id",
                "operationId": "0aff7907c338b262c3fae8b4dbc2c31d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "course not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses/{id}": {
            "get": {
                "tags": [
                    "courses"
                ],
                "summary": "Retrieve a course by ID",
                "description": "Returns a single course by ID",
                "operationId": "acb322def20ff023d264d9786fe407de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name_course": {
                                                        "type": "string",
                                                        "example": "big data"
                                                    },
                                                    "teacher_id": {
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "curso big data"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "courses"
                ],
                "summary": "Update course by ID",
                "operationId": "76aa7d6e2bbb5d3b4683183571d015df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Course data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name_course": {
                                        "type": "string",
                                        "example": "Big Data"
                                    },
                                    "teacher_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "New course on PHP"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name_course": {
                                            "type": "string",
                                            "example": "Big Data"
                                        },
                                        "teacher_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "New course on PHP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "teacher not valid"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses/teacher/{id}": {
            "get": {
                "tags": [
                    "courses"
                ],
                "summary": "Retrieve courses by teacher ID",
                "description": "Returns a list of courses taught by a specific teacher",
                "operationId": "92261860fca2c78c743c19f3049d2abf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the teacher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name_course": {
                                                        "type": "string",
                                                        "example": "big data"
                                                    },
                                                    "teacher_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "curso big data"
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "hhttps://cludibary?v354343"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Teacher not found or no courses found for the teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses/not_teacher": {
            "get": {
                "tags": [
                    "courses"
                ],
                "summary": "Retrieve all courses",
                "description": "Returns a list of all courses whitout teacher",
                "operationId": "b43a17f6c3417147e7ba5341db6f57ee",
                "responses": {
                    "200": {
                        "description": "A list with courses whitout teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name_course": {
                                                        "type": "string",
                                                        "example": "big data"
                                                    },
                                                    "teacher_id": {
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "curso big data"
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "hhttps://cludibary?v354343"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No courses found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No courses without teachers found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object",
                                                        "example": []
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses/{id}/change_image": {
            "post": {
                "tags": [
                    "courses"
                ],
                "summary": "Change the course's image",
                "operationId": "09f1166576c5710a18c92283c0e6a892",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "The image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "https://cloudinary?v237&"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "file_detail/{activityFileId}/by/{studentId}": {
            "post": {
                "tags": [
                    "DetailFilesActivities"
                ],
                "summary": "Check if a student has already checked a file activity and register the check if not.",
                "operationId": "dfe3c843ff04373315090d9443f479d5",
                "parameters": [
                    {
                        "name": "activityFileId",
                        "in": "path",
                        "description": "ID of the file activity to check",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The file activity check has been created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "activity_file_id": {
                                                    "description": "ID of the activity file.",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "student_id": {
                                                    "description": "ID of the student.",
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to failed validation or business logic error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "description": "Validation or business logic error.",
                                            "type": "string",
                                            "example": "student or file activity not found"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while processing the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "error": {
                                            "description": "Description of the internal error.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payments": {
            "post": {
                "tags": [
                    "payments"
                ],
                "summary": "Register a payment",
                "operationId": "ce3bf227dff90cb0a8c80383d38ddabb",
                "requestBody": {
                    "description": "Payment details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "user_id",
                                    "value"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "5000"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD: defaul 'mxn' "
                                    },
                                    "observations": {
                                        "type": "string",
                                        "example": "Payment for service"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment created successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "5000"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "observations": {
                                                    "type": "string",
                                                    "example": "Payment for service"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating payment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating payment"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payment": {
            "get": {
                "tags": [
                    "payments"
                ],
                "summary": "Get all payment",
                "operationId": "16b4add89618fdee45fa2753e98a2113",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment retrieved successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "5000"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "observations": {
                                                    "type": "string",
                                                    "example": "Payment for service"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payment/{id}": {
            "get": {
                "tags": [
                    "payments"
                ],
                "summary": "Get a payment by ID",
                "operationId": "f679ec8f6c8b686907189bc1ad5c7699",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment retrieved successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "5000"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "observations": {
                                                    "type": "string",
                                                    "example": "Payment for service"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "payments"
                ],
                "summary": "Update a payment by ID",
                "operationId": "2185d23588bdddabf3699cc316c77290",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Payment details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "number",
                                        "example": 5000
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "observations": {
                                        "type": "string",
                                        "example": "Updated payment for service"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment updated successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "5000"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "observations": {
                                                    "type": "string",
                                                    "example": "Updated payment for service"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "payments"
                ],
                "summary": "Delete a payment by ID",
                "operationId": "a8a3dd4dcb37dea6ded098ab41c5c4ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment deleted successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/permissions": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "Retrieve all permissions",
                "operationId": "06c4c91a047ae2140547ac13066dca4b",
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "permision_detail": {
                                                    "type": "string",
                                                    "example": "Permission details"
                                                },
                                                "expired_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-04 01:39:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "permissions"
                ],
                "summary": "Create a new permission",
                "operationId": "e65355546253a88c986a803bc5d36a9b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permision_detail"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "permision_detail": {
                                        "type": "string",
                                        "example": "Permission details"
                                    },
                                    "expired_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "04-09-2024 01:39"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "permision_detail": {
                                                    "type": "string",
                                                    "example": "Permission details"
                                                },
                                                "expired_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-04 01:39:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/permissions/{id}": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "Retrieve a specific permission",
                "operationId": "95137028f0d3ef9f0aaf52ca9317b310",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "permision_detail": {
                                                    "type": "string",
                                                    "example": "Permission details"
                                                },
                                                "expired_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-04 01:39:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "permissions"
                ],
                "summary": "Delete a specific permission",
                "description": "Delete a specific permission",
                "operationId": "178b7aeb73dfb2bcea57a90163caf598",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission successfully deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/permissions/{id}/extend": {
            "post": {
                "tags": [
                    "permissions"
                ],
                "summary": "Extend the expiration date of a specific permission",
                "operationId": "e9c316c735bf5bd868286972ae9d1ed1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to extend",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "days_num"
                                ],
                                "properties": {
                                    "days_num": {
                                        "description": "Number of days to extend the expiration date",
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission expiration date successfully extended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "permision_detail": {
                                                    "type": "string",
                                                    "example": "Permission details"
                                                },
                                                "expired_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-04 01:39:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-05 01:39:45"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Get All product",
                "operationId": "07f8f62d8e33161adcc5c0230b8efcd3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "big data 2"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "curso bid data 40 horas con certificado"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T03:53:55.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T03:53:55.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "operationId": "2425bfc4be5e4adcdd6b7888180fb657",
                "requestBody": {
                    "description": "Product details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "currency"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "big data 2"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "curso bid data 40 horas con certificado"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 5000
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "big data 2"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "curso bid data 40 horas con certificado"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T03:53:55.000000Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T03:53:55.000000Z"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating product"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'currency' cannot be null"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Get product by ID",
                "operationId": "32ad9f4bc453cb13c45ee5c012dd1af7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "big data 2"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "curso bid data 40 horas con certificado"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T03:53:55.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T03:53:55.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Update product by ID",
                "operationId": "62500fec4136e003d23e646e0c7b10fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated product details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated product description"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "usd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "integer"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating product"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "summary": "Delete product by ID",
                "operationId": "06c5c204ddfefc91076b2511b4b9a1dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schedules": {
            "post": {
                "tags": [
                    "schedules"
                ],
                "summary": "Create a new schedule for an activity",
                "description": "Create a new schedule for a given activity, validating date and time, teacher availability, and activity schedule conflicts.",
                "operationId": "createScheduleForActivity",
                "requestBody": {
                    "description": "Schedule data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activity_id",
                                    "teacher_id",
                                    "start_hour",
                                    "end_hour"
                                ],
                                "properties": {
                                    "activity_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "teacher_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_hour": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-10 08:00:00"
                                    },
                                    "end_hour": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-10 09:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Schedule created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activity_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "teacher_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "start_hour": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-10 08:00:00"
                                        },
                                        "end_hour": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-10 09:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "date invalid"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating schedule"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schedule/teacher/{id}": {
            "get": {
                "tags": [
                    "schedules"
                ],
                "summary": "Get schedule for a specific teacher by ID",
                "description": "Retrieve the schedule for a teacher specified by their ID.",
                "operationId": "getScheduleForTeacherId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the teacher",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "course": {
                                                        "type": "string",
                                                        "example": "programacion 1"
                                                    },
                                                    "activity": {
                                                        "type": "string",
                                                        "example": "ver video"
                                                    },
                                                    "start_hour": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-10 08:00:00"
                                                    },
                                                    "end_hour": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-10 09:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Teacher not found or has no schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "teacher has not schedule"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schedule/student/{id}": {
            "get": {
                "tags": [
                    "schedules"
                ],
                "summary": "Get schedule for a specific student by ID",
                "description": "Retrieve the schedule for a student specified by their ID.",
                "operationId": "getScheduleByStudentId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "course": {
                                                        "type": "string",
                                                        "example": "programacion 1"
                                                    },
                                                    "acticity": {
                                                        "type": "string",
                                                        "example": "ver video"
                                                    },
                                                    "name teacher": {
                                                        "type": "string",
                                                        "example": "Alberto Higuera"
                                                    },
                                                    "start_hour": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-10 08:00:00"
                                                    },
                                                    "end_hour": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-10 09:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User is not a student or has no schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "user is not student"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schedule/{id}": {
            "post": {
                "tags": [
                    "schedules"
                ],
                "summary": "Update schedule by ID",
                "description": "Update a schedule specified by its ID.",
                "operationId": "updateScheduleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Schedule data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "start_hour",
                                    "end_hour"
                                ],
                                "properties": {
                                    "start_hour": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-10 08:00:00"
                                    },
                                    "end_hour": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-10 09:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "start_hour": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-10 08:00:00"
                                                },
                                                "end_hour": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-10 09:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "date is not valid"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "schedule not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "schedules"
                ],
                "summary": "Delete schedule by ID",
                "description": "Delete a schedule specified by its ID.",
                "operationId": "deleteScheduleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "schedule was delete"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "schedule not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "tags": [
                    "students"
                ],
                "summary": "Retrieve all students that are in some course",
                "description": "Retrieve all students that are in some course",
                "operationId": "86fa222aade67f09ee2e3b85d8a95463",
                "responses": {
                    "200": {
                        "description": "A list with all students",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "hola@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "course": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Big Data"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "students not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "students not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "students"
                ],
                "summary": "Add a new student",
                "operationId": "60446b3da6402e521b44c5c4eee44cc9",
                "requestBody": {
                    "description": "Student details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "course_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "course_id": [
                                                    "The course_id field is required"
                                                ]
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "student not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "errors": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{id}": {
            "get": {
                "tags": [
                    "students"
                ],
                "summary": "Retrieve all students that are in some course",
                "description": "Retrieve all students that are in some course",
                "operationId": "60c3e0a0e086bd11afe1e654dbc730f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list with all students",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "hola@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "course": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Big Data"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "students not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "students not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "students"
                ],
                "summary": "Delete a student by ID",
                "description": "Delete a student by their ID",
                "operationId": "8b900651dcecc1f713f0a87f1ac9cd62",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "student deleted successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "student not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "internal server error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error message here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/courses/{id}": {
            "get": {
                "tags": [
                    "students"
                ],
                "summary": "Retrieve all students by course ID",
                "description": "Retrieve all students enrolled in a specific course by the course ID",
                "operationId": "bec7b596d492117b8d11724c5dc40ee8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of students enrolled in the course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john.doe@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "student not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "operationId": "f551d752afe5e44b785ee6c802939d96",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "id_rol": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "image_url": {
                                                "type": "string",
                                                "example": "hhtps://coudnary/v?qdsj"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update user by ID",
                "operationId": "e588960cc60102d25daf000dd7b75113",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "id_rol": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete user by ID",
                "operationId": "a0ce91d753f85c9a3caee8c136d70e4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}/change_image": {
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Change the user's image",
                "operationId": "f0ac80b3cf0a12912817aa6c0b5c9ac2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "The image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "https://cloudinary?v237&"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "bad request"
                                        },
                                        "error": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}/change_password": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Change the password of a user",
                "operationId": "fb0cf8f866a838ccb801035640e048e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "newsecurepassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "rol_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    }
}